#include <Wire.h>
#include "RTClib.h"
#include <SoftwareSerial.h>
#include "DFRobotDFPlayerMini.h"
#include <DS3232RTC.h>  
#include <Streaming.h> 
#include <Time.h>
#include <Timelib.h>

// RTC and MP3 module setup
RTC_DS3231 rtc;
DS3232RTC myRTC; // Using DS3232RTC for time management and setting
SoftwareSerial mySoftwareSerial(10, 11); // RX, TX for DFPlayer
DFRobotDFPlayerMini myDFPlayer;

const int pressureSensorPin = A0; // Only one pressure sensor pin
bool alreadyChecked = false; // Flag to avoid multiple checks at the same minute
int threshold = 500; // Placeholder for threshold value

void setup() {
  Serial.begin(115200);
  mySoftwareSerial.begin(9600);
  rtc.begin();
  myRTC.begin();

  // Initialize the MP3 player
  myDFPlayer.setTimeOut(1000);  
  if (!myDFPlayer.begin(mySoftwareSerial, false)) {
      Serial.println("MP3 player initialization failed!");
      while (true);
  }
  myDFPlayer.volume(10);

  // Initialize sensor pin
  pinMode(pressureSensorPin, INPUT);

  // Synchronize Time library with RTC
  setSyncProvider(myRTC.get);
  Serial.println("RTC Sync");
}

void loop() {
  DateTime now = rtc.now(); // Get the current date and time
  time_t t = dateTimeToTimeT(now);

  tmElements_t tm;

  // Check for serial input to set the RTC
  if (Serial.available() >= 12) {
    setRTCFromSerial(tm);
  }

  // Check specific timing for the MP3 alert
  checkAndPlayAlert(now);

  // Print the date and time every second
  static time_t tLast;
  if (t != tLast) {
    tLast = t;
    printDateTime(t);
    Serial.println();
  }

  delay(10000);  // Delay for reducing processing load
}

time_t dateTimeToTimeT(DateTime dt) {
    tmElements_t tm;
    tm.Year = dt.year() - 1970; // tm.Year is the offset from 1970
    tm.Month = dt.month();
    tm.Day = dt.day();
    tm.Hour = dt.hour();
    tm.Minute = dt.minute();
    tm.Second = dt.second();
    return makeTime(tm); // Convert to time_t
}

void setRTCFromSerial(tmElements_t &tm) {
  int y = Serial.parseInt();
  if (y >= 100 && y < 1000)
      Serial.println("Error: Year must be two digits or four digits!");
  else {
      if (y >= 1000)
          tm.Year = CalendarYrToTm(y);
      else
          tm.Year = y2kYearToTm(y);
      tm.Month = Serial.parseInt();
      tm.Day = Serial.parseInt();
      tm.Hour = Serial.parseInt();
      tm.Minute = Serial.parseInt();
      tm.Second = Serial.parseInt();
      time_t t = makeTime(tm);
      myRTC.set(t);
      setTime(t);
      Serial.print("RTC set to: ");
      printDateTime(t);
      Serial.println();
      while (Serial.available() > 0) Serial.read();
  }
}

void checkAndPlayAlert(DateTime now) {
  if ((now.dayOfTheWeek() == 2 || now.dayOfTheWeek() == 4) && now.hour() == 9 && now.minute() == 40) {
    if (!alreadyChecked) {
      alreadyChecked = true;
      int sensorValue = analogRead(pressureSensorPin);
      if (sensorValue > threshold) {
        myDFPlayer.play(1);
      }
    }
  } else {
    alreadyChecked = false;
  }
}

void printDateTime(time_t t) {

  Serial.print("Year:");
  Serial.print(year(t));
  Serial.println();
  Serial.print("Hour:   ");
  Serial.print(hour(t));
  Serial.println();
  Serial.print("Minutes: ");
  Serial.print(minute(t));
  Serial.println();
  Serial.print("Second: ");
  Serial.print(second(t));
  Serial.println();
  Serial.println();
  Serial.println();
  // Implement your method to print the date and time
  // Example: Serial.print(year(t));
}
