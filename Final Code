#include <Wire.h>
#include <SoftwareSerial.h>
#include "DFRobotDFPlayerMini.h"
#include <DS3232RTC.h>  
#include <Streaming.h> 
#include <Time.h>
#include <Timelib.h>

// RTC and MP3 module setup
DS3232RTC myRTC; // Using DS3232RTC for time management and setting
SoftwareSerial mySoftwareSerial(10, 11); // RX, TX for DFPlayer
DFRobotDFPlayerMini myDFPlayer;

const int pressureSensorPin = A0; // Only one pressure sensor pin
bool alreadyChecked = false; // Flag to avoid multiple checks at the same minute
int threshold = 60; // Placeholder for threshold value

void setup() {
  Serial.begin(115200);
  mySoftwareSerial.begin(9600);
  myRTC.begin();

  // Initialize the MP3 player
  myDFPlayer.setTimeOut(1000);  
  if (!myDFPlayer.begin(mySoftwareSerial, false)) {
    Serial.println("MP3 player initialization failed!");
    while (true);
  }
  myDFPlayer.volume(30);

  // Initialize sensor pin
  pinMode(pressureSensorPin, INPUT);

  // Synchronize Time library with RTC
  setSyncProvider(myRTC.get);
  Serial.println("RTC Sync");
  if (timeStatus() != timeSet) Serial.println(" FAIL!");
}

void loop() {
  static time_t tLast;
  time_t t = now();

  // check for input to set the RTC, minimum length is 12, i.e. yy,m,d,h,m,s
  if (Serial.available() >= 12) {
    setRTCFromSerial();  // Correct function call to set RTC from serial input
  }

  if (t != tLast) {
    tLast = t;
    printDateTime(t);
    if (second(t) == 0) {
      float c = myRTC.temperature() / 4.;
      float f = c * 9. / 5. + 32.;
      Serial.print("  ");
      Serial.print(c);
      Serial.print(" C  ");
      Serial.print(f);
      Serial.print(" F");
    }
    Serial.println();
  }

  // Execute on Tuesdays and Thursdays at 9:40 AM
  //if ((weekday(t) == 3 || weekday(t) == 5) && hour(t) == 9 && minute(t) == 40) {
    if (!alreadyChecked) {
      alreadyChecked = true;
      int sensorValue = analogRead(pressureSensorPin);
      Serial.println(sensorValue);
      if (sensorValue > threshold) {
        myDFPlayer.play(1);
      }
    }
  //} 
  else {
    alreadyChecked = false;
  }
  delay(5000);
}

void setRTCFromSerial() {
  tmElements_t tm;
  int y = Serial.parseInt();
  if (y >= 100 && y < 1000) {
    Serial.println("Error: Year must be two digits or four digits!");
  } else {
    if (y >= 1000)
        tm.Year = CalendarYrToTm(y);
    else
        tm.Year = y2kYearToTm(y);
    tm.Month = Serial.parseInt();
    tm.Day = Serial.parseInt();
    tm.Hour = Serial.parseInt();
    tm.Minute = Serial.parseInt();
    tm.Second = Serial.parseInt();
    time_t t = makeTime(tm);
    myRTC.set(t);
    setTime(t);
    Serial.print("RTC set to: ");
    printDateTime(t);
    Serial.println();
    while (Serial.available() > 0) Serial.read();
  }
}


void printDateTime(time_t t) {
  printDate(t);
  Serial.print(' ');
  printTime(t);
}

void printTime(time_t t) {
  printI00(hour(t), ':');
  printI00(minute(t), ':');
  printI00(second(t), ' ');
}

// print date to Serial
void printDate(time_t t)
{
    printI00(day(t), 0); // Print day with no delimiter
    Serial.print(' '); // Print space
    Serial.print(monthShortStr(month(t))); // Print abbreviated month name
    Serial.print(' ');
    Serial.print(year(t)); // Print year directly as an integer
}


void printI00(int val, char delim) {
  if (val < 10) Serial.print('0');
  Serial.print(val);
  if (delim > 0) Serial.print(delim);
}
